---

# On 32b platforms (raspberry pi 0-2 ), you need to build everything, including ros_core.
# once ros_core is built, you don't need to wait for everything to validate, you can skip roscore 
# pass the packages that don't need rebuilding as a space seaprated string to `colcon_skip_packages_to`
# example:
#    colcon_skip_packages_to='ros_core joy'
#
# full example command:
#    ansible-playbook ros2-colcon-rebuild.yml --extra-vars "nodes=navbeacons ros2_colcon_single_core=true colcon_skip_packages_to='ros_core joy'" -K -v
# 




- name: build ros from source
  hosts: '{{ nodes }}'
  vars:
    ros2_user:
      name: '{{ ansible_user }}'
      group: '{{ ansible_user }}'
    ros2_workspace: '/home/{{ ros2_user.name }}/{{ ros2_distribution }}_ws'

  tasks:

  - name: lookup desired ros config
    ansible.builtin.include_vars:
      file: vars/ros-config.yml

  - name: lookup desired workspace layout
    ansible.builtin.include_vars:
      file: vars/workspace-config.yml

  - name: report the config back
    ansible.builtin.debug:
      msg: 
        - 'Installing ROS2 {{ ros2_distribution }}'
        - 'for user: {{ ros2_user.name }}'
        - 'into workspace at {{ ros2_workspace }}'
        #- 'preloading directories with config {{ ros2_workspace_layout }}'


  ############## start changing the target #################

  # XXX take a variable for the sub directory to rebuild


  # set some sane defaults for prototyping with colcon
  # use symlink for fiddling configs over git
  # avoid symlink for cloning binaries
  - name: set some colcon default flags
    include: tasks/ros2-colcon-set-defaults.yml
    vars:
      ros2_colcon_symlink: true
      ros2_colcon_needs_latomic: false


  # # finally build the workspace
  - name: ROS2 colcon | build the workspace
    include: tasks/ros2-colcon-build.yml

