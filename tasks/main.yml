---

#############
# ROS stuff

# long list of deps for source compilation
- name: ROS2 dependencies Install
  include: ros2-dependencies-install.yml
  tags: ros2-dependencies-install


# create workspace (XXX this is trivial)
- name: ROS2 Workspace Setup
  include: ros2-workspace-setup.yml
  tags: ros2-workspace-setup
  ws_dirs: ['core', 'teleop', 'app']


# set defaults to deal with libatomic on pi
- name: ROS2 colcon defaults
  include: ros2-colcon-defaults.yml
  tags: ros2-colcon-defaults


###############
# fetch sources

# generate source list for a vanilla ros-core variant
- name: ROS2 generator list sources
  include: ros2-source-vcs.yml
  tags: ros2-source-vcs
  ros_packages:
    - 'ros_core'
  #deps_up_to:
  vcs_name: 'ros_core'.repos
  target_ws_dir: 'core'

# generate source list for telop tools (this list can be merged into the above)
- name: ROS2 generator list sources
  include: ros2-source-vcs.yml
  tags: ros2-source-vcs
  ros_packages:
    - 'joy'
    - 'sdl2_vendor'
    - 'joy_linux'
    - 'diagnostic_updater'
    - 'teleop_twist_keyboard'
    - 'teleop_twist_joy'
  #deps_up_to:  # using exclude src
  #  - 'ros_core'
  vcs_name: 'ros_teleop'.repos
  target_ws_dir: 'teleop'


###########
# fetch application code

- name: 
  ansible.builtin.git:
    repo: 'https://github.com/BrettRD/ros-gst-bridge.git'
    dest: {{ ros2_workspace }}/src/app/ros-gst-bridge


#########
# fetch package-specific system dependencies
- name: ROS2 rosdep over workspace
  include: ros2-rosdep-over-ws.yml
  tags: ros2-rosdep-over-ws


# finally build the workspace
- name: ROS2 rosdep over workspace
  include: ros2-clcon-build.yml
  tags: ros2-colcon-build


# add setup.bash to the user's bashrc
- name: Update .bashrc with install/setup.bash
  lineinfile:
    path: /home/{{ ros2_user.name }}/.bashrc
    line: source {{ ros2_workspace }}/install/setup.bash

##############

# launch a trivial node
- name: ROS2 launch a node
  include: ros2-launch.yml
  tags: ros2-launch-announce
  package: 



